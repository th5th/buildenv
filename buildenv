#!/bin/bash
# 
# buildenv 0.1
#
# A Bash script for managing sweet build environments.
#
# Copyright 2013  Ed Willson <ed.willson24@gmail.com>
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

BUILDENV="buildenv 0.1 (c) 2013 Ed Willson <ed.willson24@gmail.com>"

E_SUCCESS=0
E_BADTYPE=1
E_BADPARAM=2
E_COULDNOTTAR=3

TEMPLATEPATH="/usr/local/etc/buildenv"

# unpack the package in directory for type $1 into directory $2.
function unpack()
{
    tar --keep-newer-files -xzf "$TEMPLATEPATH"/"$1"/"$1".tar.gz -C $2
    pushd $2
    $TEMPLATEPATH/$1/mkbuildenv.sh
    popd
}

# pack the source under directory $1 into a tarball for type $2.
function pack()
{
    # Create a tarball for the whole directory.
    TARBALL="$TEMPLATEPATH"/"$2"/"$2".tar.gz
    if [ -e $TARBALL ]; then rm $TARBALL; fi
    tar --exclude=mkbuildenv.sh -czf $TARBALL -C $1 `ls -A $1`
    if [ ! -e $TARBALL ]; then
        echo "Error: Could not create tarball."
        exit $E_COULDNOTTAR
    fi
}

case "$1" in
    new)
        if [ ! -d $TEMPLATEPATH/"$2" ]; then
            echo "Error: Supplied enironment type ("$2") does not exist in $TEMPLATEPATH"
            exit $E_BADTYPE
        fi

        if [ ! -z "$3" ]; then
            TARGETPATH="$3"
            if [ ! -d "$3" ]; then mkdir -p $TARGETPATH; fi
        else
            TARGETPATH=`pwd`
        fi

        # If there isn't an available tarball, make one!
        if [ ! -e "$TEMPLATEPATH"/"$2"/"$2".tar.gz ]; then pack $TEMPLATEPATH/$2 $2; fi

        unpack $2 $TARGETPATH
        exit $E_SUCCESS
        ;;
    package)
        # Command to create a new build environment type from the current working dir.
        if [ -z "$2" ]; then
            echo "Error: Must provide type name to package command."
            exit $E_BADPARAM
        fi

        if [ ! -z "$3" ]; then
            SOURCEPATH="$3"
        else
            SOURCEPATH=$TEMPLATEPATH/"$2"
        fi

        # Checks for existence of mkbuildenv.sh.
        if [ -d "$SOURCEPATH" ] && [ -e "$SOURCEPATH"/mkbuildenv.sh ]; then
            pack "$SOURCEPATH" "$2"
        else
            echo "Error: Specified source path does not exist or does not contain a mkbuildenv.sh file."
            exit $E_BADPARAM
        fi

        exit $E_SUCCESS
        ;;
    *)
        echo "${BUILDENV}"
        echo "Usage: ${0##*/} new | package <type> [path]"
        exit $E_BADPARAM
        ;;
esac
